plugins {
  id 'com.github.ben-manes.versions' version "0.21.0"
  id 'scala'
  id 'com.github.maiflai.scalatest' version "0.25"
  id 'java-gradle-plugin'
  id 'maven-publish'
  id 'com.gradle.plugin-publish' version "0.10.1"
  id 'com.jfrog.bintray' version "1.8.4"
  id 'idea'

  // This is here only for testing mathematics rendering;
  // for use in production, plugin declares a compile dependency on the Node plugin. 
  id "com.moowork.node" version "1.3.1"
}

// This is here only for testing mathematics rendering.
node {
  nodeModulesDir = project.buildDir
}
task installMathJaxNode(type: NpmTask) {
  args = ['install', 'mathjax-node', '--no-save']
}
installMathJaxNode.doFirst {
  project.buildDir.mkdir()
}
test.dependsOn(installMathJaxNode)


group = 'org.podval.docbook'
version = '0.7.1'
description = 'Gradle DocBook plugin'

repositories {
  jcenter()
}

def scalaVersion = '2.12.8'
def scalaVersionMajor = '2.12'
def fopVersion = '2.3'
def batikVersion = '1.11'

def xercesVersion = '2.11.0'
// v1.3.04 doesn't have org.w3c.dom.ElementTraversal that Xerces uses:
configurations.all {
  resolutionStrategy {
    force "xml-apis:xml-apis:1.4.01"
  }
}

dependencies {
  // Zinc
  zinc 'com.typesafe.zinc:zinc:0.3.15'

  // Scala
  compile "org.scala-lang:scala-library:$scalaVersion"

  // XMLResolver
  compile 'org.xmlresolver:xmlresolver:1.0.1'

  // Saxon 6 (XSLT 1.0)
  compile 'saxon:saxon:6.5.2' // 6.5.3 is the latest, but - no sources for debugging...

  // Saxon 9 (XSLT 2.0)
  compile 'net.sf.saxon:Saxon-HE:9.9.1-2'

  // Xerces
  runtime "xerces:xercesImpl:$xercesVersion"

  // FOP
  compile "org.apache.xmlgraphics:fop:$fopVersion"
  compile "org.apache.xmlgraphics:batik-transcoder:$batikVersion"
  compile "org.apache.xmlgraphics:batik-extension:$batikVersion"


  // Hyphenation patterns
  compile 'net.sf.offo:fop-hyph:2.0'

  // JEuclid
  compile 'de.rototor.jeuclid:jeuclid-fop:3.1.14'
  // without FOP plugin: compile 'de.rototor.jeuclid:jeuclid-core:3.1.13'
  // obsolete:  'net.sourceforge.jeuclid:jeuclid-fop:3.1.9'

  // This is a plugin that is applied to the project that uses DocBook plugin :)
  compile "com.moowork.gradle:gradle-node-plugin:1.3.1"

  compile "com.eclipsesource.j2v8:j2v8_linux_x86_64:4.8.0"

  testImplementation "org.scalatest:scalatest_$scalaVersionMajor:3.0.5"
  testImplementation "org.pegdown:pegdown:1.6.0" // for scalatest reports
  // added by the 'java-gradle-plugin': testImplementation gradleTestKit()
}

jar {
  manifest {
    attributes(
      'Implementation-Title'  : project.description,
      'Implementation-Version': project.version
    )
  }
}

// Gradle plugin [publishing?] plugin adds tasks publishPluginJar and
// publishPluginJavaDocsJar that create sources and javadoc archives;
// attempts to use them as artifacts in the Maven publication failed,
// so I make my own, replacing javadoc with scaladoc :)
task sourceJar(type: Jar) {
  from sourceSets.main.allSource
  archiveClassifier.set('sources')
}

task scaladocJar(type: Jar) {
  from scaladoc.destinationDir
  archiveClassifier.set('scaladoc')
}
scaladocJar.dependsOn scaladoc

def pluginArtifactId = project.name // jar.baseName

gradlePlugin {
  plugins {
    docBookPlugin {
      id = pluginArtifactId
      implementationClass = 'org.podval.docbook.gradle.DocBookPlugin'
    }
  }
}

def gitHubRepository    = "dubinsky/podval-docbook-gradle"
def gitHubRepositoryUrl = "https://github.com/$gitHubRepository"
def pluginTags = ['Scala', 'DocBook', 'Gradle', 'Plugin', 'Html', 'Pdf', 'Epub', 'MathML', 'JEuclid']

pluginBundle {
  website = "${gitHubRepositoryUrl}"
  vcsUrl = "${gitHubRepositoryUrl}.git"

  plugins {
    docBookPlugin {
      displayName = project.description
      description = project.description
      tags        = pluginTags
    }
  }

  // If you have an existing plugin deployed to Bintray and would like to keep
  // your existing group ID and artifact ID for continuity, you can specify
  // them here (needs manual approval on first publication).
  mavenCoordinates {
    groupId    = project.group
    artifactId = pluginArtifactId
  }
}

publishing {
  publications {
    mavenPublication(MavenPublication) {
      groupId project.group
      artifactId pluginArtifactId

      from components.java

      artifact sourceJar
      artifact scaladocJar

      pom {
        name = project.name
        description = project.description
        url = "$gitHubRepositoryUrl"
        scm {
          url = "$gitHubRepositoryUrl"
          connection = "scm:git:git://github.com/${gitHubRepository}.git"
          developerConnection = "scm:git:ssh://github.com/${gitHubRepository}.git"
        }
        licenses {
          license {
            name = 'The Apache Software License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution = 'repo'
            comments = 'A business-friendly OSS license'
          }
        }
        developers {
          developer {
            id = 'dub'
            name = 'Leonid Dubinsky'
            email = 'dub@podval.org'
            url = 'http://dub.podval.org'
            organization = 'Podval Group'
            organizationUrl = 'http://www.podval.org'
            timezone = '-5'
          }
        }
      }
    }
  }
}

bintray {
  user         = 'dubinsky'
  key          = findProperty('bintrayApiKey')
  publications = [
    'mavenPublication',                        // Main: pom, jar, sources, etc.
    // Gradle plugin [publishing?] plugin adds another publication 'pluginMaven'
    // that produces the same Jar as the main one - and a POM that has only dependencies.
    // I do not think I need to publish that :)          
    'docBookPluginPluginMarkerMaven'
  ]
  dryRun       = false
  publish      = true
  override     = true
  pkg {
    repo                   = project.group
    name                   = pluginArtifactId
    desc                   = project.description
    websiteUrl             = "${gitHubRepositoryUrl}"
    issueTrackerUrl        = "${gitHubRepositoryUrl}/issues"
    vcsUrl                 = "${gitHubRepositoryUrl}.git"
    githubRepo             = gitHubRepository
    licenses               = ['Apache-2.0']
    labels                 = pluginTags
    publicDownloadNumbers  = true
    githubReleaseNotesFile = 'CHANGELOG.md'
    version { name         = project.version }
  }
}

idea {
  module {
    excludeDirs += [
      file('.idea'),
      file('gradle')
    ]
  }
}
