apply plugin: 'idea'

idea {
  project {
    jdkName = '1.8'
    vcs = 'Git'
  }

  module {
    excludeDirs += [
      file('.idea'),
      file('gradle')
    ]
  }
}

//jar.baseName = 'org.podval.calendar.dates'

allprojects {
  repositories {
    jcenter()
  }

  group = 'org.podval.calendar'
  version = '1.0-SNAPSHOT'
}

def scalaVersion      = '2.12.3'
def scalaVersionMajor = '2.12'

ext.lib = [
  zinc      :
  'com.typesafe.zinc:zinc:0.3.15',
//    'org.scala-sbt:zinc:1.0',
  scala     : "org.scala-lang:scala-library:$scalaVersion",
  junit     : 'junit:junit:4.12',
  scalaTest : "org.scalatest:scalatest_${scalaVersionMajor}:3.0.3",
  scalaCheck: "org.scalacheck:scalacheck_${scalaVersionMajor}:1.13.4"
]

// TODO add GIT scm link
def pomConfig = {
  description 'Jewish Calendar Dates.'
  licenses {
    license {
      name = 'The Apache Software License, Version 2.0'
      url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
      distribution 'repo'
      comments 'A business-friendly OSS license'
    }
  }
  organization {
    name 'Podval Group'
    url 'http://www.podval.org'  // http://www.jewish-calendar.org/
  }
  developers {
    developer {
      id 'dub'
      name 'Leonid Dubinsky'
      email 'dub@podval.org'
      url 'http:dub.podval.org'
      organization 'Podval Group'
      organizationUrl 'http://www.podval.org'
      roles {
        role 'developer'
      }
      timezone '-5'
    }
  }
}

project(':dates') {
  apply plugin: 'scala'
  apply plugin: 'maven'

  dependencies {
    zinc lib.zinc
    compile lib.scala
    testImplementation lib.junit, lib.scalaTest, lib.scalaCheck
  }

  test {
    testLogging { showStandardStreams = true }
  }

  install {
    repositories.mavenInstaller {
      pom.project pomConfig
    }
  }

  uploadArchives {
    repositories.mavenDeployer {
//    repository(...)
      pom.project pomConfig
    }
  }
}

project(':astronomy') {
  apply plugin: 'scala'

  dependencies {
    zinc lib.zinc
    compile lib.scala, project(':dates')
    testImplementation lib.junit, lib.scalaTest
  }

  test {
    testLogging { showStandardStreams = true }
  }
}

project(':generate') {
  apply plugin: 'scala'

  dependencies {
    zinc lib.zinc
    compile lib.scala, project(':dates')
    testImplementation lib.junit, lib.scalaTest
  }

  test {
    testLogging { showStandardStreams = true }
  }
}
