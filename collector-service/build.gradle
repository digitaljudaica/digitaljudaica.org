plugins {
  id 'scala'
  id 'com.github.maiflai.scalatest'
  id 'com.google.cloud.tools.jib'
}

description = 'Archive Collector Service'

configureService()

dependencies {
  implementation project(':collector')
  implementation project(':util')
}

final String gcloudAccount = 'dub@opentorah.org'
final String gcloudProject = 'alter-rebbe-2'
final String gcloudService = 'collector'
final String serviceImage  = "gcr.io/$gcloudProject/$gcloudService"

// 'gcloud auth print-access-token'.execute().text.trim()
final String gcloudAccessToken =
        findProperty('gcloudAccessToken_dub_opentorah_org') ?:
       System.getenv('gcloudAccessToken_dub_opentorah_org')
if (gcloudAccessToken == null) project.logger.error("No gcloud access token!")

jib {
  to {
    image = serviceImage
    auth {
      username = 'oauth2accesstoken'
      password = gcloudAccessToken
    }
  }
  container { mainClass = 'org.opentorah.collector.Service' }
}

deploy.dependsOn('jib')
deploy.doLast {
  exec { commandLine 'gcloud', 'config', 'set', 'account', gcloudAccount }
  exec { commandLine 'gcloud', 'config', 'set', 'project', gcloudProject }
  exec { commandLine 'gcloud', 'run', 'deploy',  gcloudService, '--image', serviceImage }
}
