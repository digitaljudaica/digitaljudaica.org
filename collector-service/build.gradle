plugins {
  id 'scala'
  id 'com.github.maiflai.scalatest'
  id 'com.google.cloud.tools.jib'
}

description = 'Archive Collector Service'

configureService()

dependencies {
  implementation project(':collector')
  implementation project(':util')
}

final String gcloudProject = 'alter-rebbe-2'
final String gcloudService = 'collector'
final String mainClassName = 'org.opentorah.collector.Service'

final String gcloudServiceAccountProperty = 'gcloudServiceAccountKey_' + gcloudProject.replace('-', '_')
final String gcloudServiceAccountKey = findProperty(gcloudServiceAccountProperty) ?: System.getenv(gcloudServiceAccountProperty)
if (gcloudServiceAccountKey == null) project.logger.error("No gcloud service account key!")

final String serviceImage  = "gcr.io/$gcloudProject/$gcloudService"

jib {
  to {
    auth {
      username = '_json_key'
      password = gcloudServiceAccountKey
    }
    image = serviceImage
  }
  container {
    mainClass = mainClassName
  }
}

deploy.dependsOn('jib')
deploy.doLast {
  exec {
    standardInput new ByteArrayInputStream(gcloudServiceAccountKey.getBytes('UTF-8'))
    commandLine 'gcloud', 'auth', 'activate-service-account', '--key-file', '-'
  }
  exec {
    commandLine 'gcloud', 'run', 'deploy', gcloudService, '--image', serviceImage
  }
}
