plugins {
  id 'java-library'
  id 'scala'
  id 'com.github.maiflai.scalatest'
  id 'java-gradle-plugin'
  id 'maven-publish'
  id 'signing'
  id 'com.gradle.plugin-publish'
}

version = docBookProjectVersion
description = 'Gradle DocBook Plugin'

configureLibrary(false)

dependencies {
  implementation project(':opentorah-fop')
  implementation project(':opentorah-xml')
  implementation project(':opentorah-util')

  // added by the 'java-gradle-plugin': testImplementation gradleTestKit()
}

// run tests sequentially
test {
  maxParallelForks = 1
}

gradlePlugin {
  plugins {
    docBook {
      id = 'org.opentorah.docbook'
      implementationClass = 'org.opentorah.docbook.plugin.DocBookPlugin'
    }
  }
}

pluginBundle {
  website = 'https://github.com/opentorah/opentorah/tree/master/docbook'
  vcsUrl  = 'https://github.com/opentorah/opentorah/tree/master/docbook' //.git' ?

  plugins {
    docBook {
      displayName = project.description
      description = project.description
      tags        = ['Scala', 'DocBook', 'Html', 'Epub', 'Pdf', 'FOP', 'MathML', 'MathJax', 'JEuclid']
    }
  }

  // If you have an existing plugin deployed to Bintray and would like to keep
  // your existing group ID and artifact ID for continuity, you can specify
  // them here (needs manual approval on first publication).
  mavenCoordinates {
    groupId    = 'org.opentorah'
    artifactId = 'opentorah-docbook'
  }
}

upload.dependsOn(publishPlugins)
